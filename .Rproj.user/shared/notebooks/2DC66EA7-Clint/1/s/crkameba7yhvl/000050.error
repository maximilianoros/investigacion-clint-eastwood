{"frames":[{"func":"`$<-`(`*tmp*`, fecha, value = structure(c(-27393, -27028, -26662, \n-26297, -25932, -25567, -25202, -24837, -24472, -24107, -23741, \n-23376, -23011, -22646, -22280, -21915, -21550, -21185, -20819, \n-20454, -20089, -19724, -19358, -18993, -18628, -18263, -17897,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`$<-.tbl_df`(`*tmp*`, fecha, value = structure(c(-27393, -27028, \n-26662, -26297, -25932, -25567, -25202, -24837, -24472, -24107, \n-23741, -23376, -23011, -22646, -22280, -21915, -21550, -21185, \n-20819, -20454, -20089, -19724, -19358, -18993, -18628, -18263,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tbl_subassign(x, i = NULL, as_string(name), list(value), i_arg = NULL, \n    j_arg = name, value_arg = substitute(value))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_recycle_rhs(value, fast_nrow(x), length(j), i_arg = NULL, \n    value_arg)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (j in seq_along(value)) {\n    if (!is.null(value[[j]])) {\n        value[[j]] <- vec_recycle(value[[j]], nrow)\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_recycle(value[[j]], nrow)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_recycle_incompatible_size(x_size = 127L, size = 79L, x_arg = \"\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(x_size = x_size, y_size = size, x_arg = x_arg, class = c(\"vctrs_error_incompatible_size\", \n    \"vctrs_error_recycle_incompatible_size\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    cnd_signal(error_assign_incompatible_size(nrow, value, j, \n        i_arg, value_arg)) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(error_assign_incompatible_size(nrow, value, j, i_arg, \n    value_arg))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Assigned data `seq(as.Date(\"1895-01-01\"), as.Date(\"2021-01-01\"), by = \"year\")` must be compatible with existing data.\n\u001B[31mx\u001B[39m Existing data has 79 rows.\n\u001B[31mx\u001B[39m Assigned data has 127 rows.\n\u001B[34mi\u001B[39m Only vectors of size 1 are recycled.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}